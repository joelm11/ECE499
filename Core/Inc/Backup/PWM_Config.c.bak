#include "PWM_Config.h"

// Update dutycycle of PWM signal. Frequency of PWM signal is hardcoded for now
void PWM_Update(TIM_HandleTypeDef *Timer, uint32_t Timer_Channel, float Duty_Cycle)
{
	uint16_t tim_period, ccr_val;

	tim_period = __HAL_TIM_GET_AUTORELOAD(Timer);

	// If requested DC is 0, turn PWM basically off
	if (Duty_Cycle == 0) {

		__HAL_TIM_SET_COMPARE(Timer, Timer_Channel, 1);

	} else {

		ccr_val = Duty_Cycle * tim_period;

		// Catch undefined case to be safe (?)
		if (ccr_val == tim_period) {

			ccr_val = 0;

		}

		// Update PWM Duty Cycle
		__HAL_TIM_SET_COMPARE(Timer, Timer_Channel, ccr_val);

	}

	return;

};
